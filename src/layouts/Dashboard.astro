---
import Link from "../components/menu/Link.astro";
import Fvfer from '../components/SmalCompents/Line.astro';
import "./Dashboard.css";

interface Props {
	title: string;
}

const { title } = Astro.props;

---


<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Sanchez:ital@0;1&display=swap" rel="stylesheet">
		<link rel="icon" type="image/svg+xml" href="https://raw.githubusercontent.com/Parlier-NJROTC/Assets/c5cddb2fd71a4737ac4ae89491347a84d3608f23/Other/NJROTC-Seal.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>DashBoard | {title}</title>

</head>
<body>
    <script lang="js">
        console.log("mannn")
    </script>
    <div id="Dashboard-Title">
        <img src="https://raw.githubusercontent.com/Parlier-NJROTC/Assets/c5cddb2fd71a4737ac4ae89491347a84d3608f23/Other/NJROTC-Seal.svg">
        <h1>NJROTC Dashboard</h1>
    </div>
    <header id="Dashboard-Header">
        <div id="User-Info">
            <h1> Cadet <span id="User-rank">Loading Rank...</span> <span id="User-primaryLastName"></span></h1>
            <h3>NS<span id="User-class">0</span></h3>
            <Fvfer></Fvfer>
            <div class="dropdown-content" style="display: none;">
                <a href="/Dashboard/NewPassword">New Password</a>
                <a href="#DarkMode" id="darkModeLink">Dark Mode</a>
                <a id="Logout" onclick="location.reload();window.localStorage.clear();">Logout</a>
            </div>
        </div>
    </header>
    <script lang="js">
        console.log("mannn2")
    </script>
    <nav id="Dashboard-Navigation">
        <br>
        <Link title="Home">Home</Link>
        <hr>
        <Link title="Request">Request</Link>
    </nav>
    <script lang="js">
        console.log("mannn3")
    </script>
    <main id="Dashboard-Content">
        <slot></slot>
    </main>
    <script lang="js">
        console.log("mannn4")
    </script>
    <script lang="js" is:inline defer>

        console.log("proof script is running")

        // so if you add "await" to stop execution until it is complete, normally
        // now the script won't run anyways if you add it
        // wizard type sheit, i got my phd im shenanigans from hogwards school of detroit

        // edit 2:14a.m. I think something is seriously wrong with this projects

        if(localStorage.getItem("Token") == "" || localStorage.getItem("Token") == null){
            console.log("not logged in, returing to to login")
            window.location.href = "/Dashboard/"
        }
        fetch("http://localhost:8080/api/alpha/v1/home/info",{
            method:"GET",
            headers:{
                'Authorization': `Bearer ${localStorage.getItem("Token")}`,
                'Content-Type': 'application/json',
            }
        }).then((res)=>{
            if(res.status != 200){
                console.log("an error occured, returning to login")
                // stopping redirects for development
                //window.location.href = "/Dashboard/"
            }
            console.log("sup")
            console.log("Fortnite")
            return res.json()
        }).then(data =>{
            //document.getElementById("User-class").innerText = data.class
            //document.getElementById("User-rank").innerText = data.rank
            //document.getElementById("User-primaryLastName").innerText = data.primaryLastName
            for(let i in data){
                console.log(i+":"+data[i])
                console.log("User-"+i == "User-class") // true at last

                //this changes the text
                //document.getElementById("User-class").innerText = data[i]

                //this does not wtf
                if(document.getElementById("User-"+i)){
                    console.log("Updating: User-"+i)
                    document.getElementById("User-"+i).innerText = data[i]
                }
            }
            
        })

    </script>
</body>
<style>
    hr{
        width: 10px;
        margin-right: 156px;
        margin-bottom: 0px;
    }
    .dropdown-content {
        position: absolute;
        background-color: #f9f9f9;
        min-width: 400px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    }

    .dropdown-content a {
        color: black;
        padding: 12px 16px;
        text-decoration: none;
        display: block;
    }

    .dropdown-content a:hover {
        background-color: #f1f1f1;
    }
    body.light-mode {
        background-color: white;
        color: black;
        --img-invert:0%;
      }

      /* Dark mode styles */
      body.dark-mode {
        filter: invert(100%);
        color: rgb(0, 0, 0);
        --top-nav-bg-color:rgb(255, 255, 255);
        --nav-bg-color:#f0f0f0;
        --nav-txt-color:rgb(0, 0, 0);
        --img-invert:100%;
        --dropdown-textcolor:#bead91;
      }
      body.dark-mode img{
        filter: invert(100%);
      }

</style>
<script lang="js">
    document.addEventListener('DOMContentLoaded', function() {
        const userInfoDropdownToggle = document.getElementById('User-Info');
        const dropdownContent = document.querySelector('.dropdown-content');
    
        userInfoDropdownToggle.addEventListener('click', function(event) {
            event.preventDefault();
            dropdownContent.style.display = dropdownContent.style.display === 'none' ? 'block' : 'none';
        });
    });

    // DO NOT TOUCH!!!!
    function toggleDarkMode() {
            const body = document.body;
            const isDarkMode = body.classList.contains('dark-mode');

            if (isDarkMode) {
                body.classList.remove('dark-mode');
                localStorage.setItem('darkMode', 'false');
            } else {
                body.classList.add('dark-mode');
                localStorage.setItem('darkMode', 'true');
            }
        }

        function initDarkMode() {
            const isDarkMode = localStorage.getItem('darkMode') === 'true';
            if (isDarkMode) {
                document.body.classList.add('dark-mode');
            }
        }

        initDarkMode();

        document.getElementById('darkModeLink').addEventListener('click', (e) => {
            e.preventDefault();
            toggleDarkMode();
        });
    </script>
    
</html>