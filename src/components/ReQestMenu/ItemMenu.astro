<!-----

structure, I wont question

<div id="Ribbon-Listing">
        <div class="menu-item" data-index="NS1 outstanding cadet"> !-- BTW data-index is the Name that Shows to the User --
        <img src="https://raw.githubusercontent.com/Parlier-NJROTC/Assets/main/Ribbon/naval_science_i_outstanding_cadet_ribbon.png"
        alt="Image 1">
    <div class="overlay-text">Box 1</div>
</div>



--- -->



<span>
    <div id="ribbon-listings">

    </div>
    <div id="taskbar" class="BottomBox">
        <button id="Button" class="saul-signature-style" style="width:44px;" >X</button>
        <p id="selectionCount" class="saul-signature-style">Items: 0 / 28</p>
        <button id="clearSelectionBtn" class="saul-signature-style">Clear Selection</button>
    </div>
</span>

<script>
    
    console.log("no error? I guess typescript now works in astro")
    let x:number = 5
    console.log(x)

    import ribbons from "./ribbons.json"

    let ribbons_Selected = 0
    let ribbons_count = 0

    for(let i in ribbons){
        ribbons_count++

        let chosen = false // ts/js is werid, this variable is only accessible to those in the loop

        let box = document.createElement("div")
        box.onclick = ()=>{
            // watch and learn
            chosen = !chosen
            if(chosen){
                ribbons_Selected++
                box.style.backgroundColor = "#007bff"
                box.style.border= "5px double #fff"
            }else{
                ribbons_Selected--
                box.style.backgroundColor = "lightblue"
            }
            document.getElementById("selectionCount")!.innerText = `Items: ${ribbons_Selected} / 15`
        }
        //Ribbons 
        box.className = "a-ribbon-listing" // werid name so that no one will use
            let ribbon = document.createElement("img")
            ribbon.src = "/Dashboard/ribbons/"+i+".png"
            box.appendChild(ribbon)

            let ribbon_name = document.createElement("span")
            ribbon_name.innerText = i
            box.appendChild(ribbon_name)
        document.getElementById("ribbon-listings")?.appendChild(box)
    }
    document.getElementById("selectionCount")!.innerText = `Items: ${ribbons_Selected} / ${ribbons_count}` // for good measure
    
</script>
<!-- My Classic Scripts -->
<script lang="js">
    document.getElementById('Button').addEventListener('click', function () {
        const astroComponent = document.querySelector('.astro-component'); 
        astroComponent.style.display = astroComponent.style.display = 'none';
    })
</script>

<style is:inline>
    .a-ribbon-listing{
        background-color: lightblue;
        width:120px;
        height: 150px;
        display:flex;
        flex-direction: column;
        text-align: center;
        justify-content: center;
        align-items: center;

        transition: 100ms;

        margin:10px;
        border: 1px solid black;
    }
    #ribbon-listings{
        overflow-y: scroll;
        grid: "Ribbons";

        background-color: tan;
        border-radius: 10px;

        display: flex;

        flex-direction: row;
        flex-wrap: wrap;

        justify-content: space-around;
    }
</style>

<!-- DO NOT ADD IS:INLINE TO STYLE TAG, is cursed as heccc -->

<style>
    #taskbar{
        grid:"Taskbar";

        display: flex;

        flex-direction: row;

        align-items: center;
        justify-content: space-between;

        border-top: 5px double black;

        margin:5px;
        margin-block:15px;

        padding-inline: 10%;
    }

    .saul-signature-style{
        font-family: "Sanchez";

        display: flex;

        align-items: center;
        justify-content: center;

        padding-inline:15px;

        margin:10px;

        height: 44px;
        min-height: 44px;
        max-height: 44px;

        border: 3px solid black;
        background-color: white;
    }
    @keyframes fadeOut {
        0% {
            opacity: 1;
        }

        100% {
            opacity: 0;
        }
    }
    span {
        position: absolute;
        top: 0px;
        left: 0%;
        background-color: wheat;
        border: double 15px black;
        padding: 10px;
        color: rgb(0, 0, 0);
        font-size: 16px;
        width: 80%;
        height: 80%;

        display: grid;
        grid-template-areas:
        "Ribbons"
        "Taskbar"
        ;
        grid-template-rows: auto 100px;

        box-shadow: 10px 20px 20px black;
    }
</style>