
<span>
    <input type="text" readonly="readonly" id="dateTimeInput"><input placeholder="Your Full Name" type="text" id="text">
    
    <div class="box"></div>
    <div class="message-container"></div>
    <div class="message-container"></div>
    <div class="message-container"></div>
    <div class="message-container"></div>
    <div class="message-container"></div>
    <div class="message-container"></div>
    <div class="message-container"></div>
    <div class="message-container"></div>
    <div class="message-container"></div>
</span>

<style>
    #dateTimeInput {
        overflow: hidden;
        width: 218.5px;
        cursor: default;
    }
    #dateTimeInput::selection{
        background-color: navy;
        color: #ffffff;
    }
    #text {
        position: absolute;
        width: calc(24vw - 5vw);
    }
    #text::spelling-error{
        text-decoration-line: none;
    }
    #text:focus{
        border-left: solid 2px black;
        background-clip: border-box;
    }

    #text::selection{
        background-color: navy;
        color: #ffffff;
    }
    span {
        display: block;
        position: absolute;
        left: 330px;
        top: 130px;
        width: 30%;
        height: 75%;
        background-color: gainsboro;
        border: double 8px black;
        color: black;
        overflow-x: hidden;
    }
    input[type="text"] {
        height: 60px;
        border: none;
        border-bottom: solid 5px black;
        font-size: 24px;
        outline: none;
    }
    input[type="text"]::selection {
        border: dotted 2px black;
    }
</style>
<script lang="JS">
    document.addEventListener('DOMContentLoaded', function() {
        const menuItems = document.querySelectorAll('.menu-item');
        const mainContainer = document.querySelector('span'); // Assuming 'span' is the parent container where message-containers should be added
    
        menuItems.forEach(item => {
            item.addEventListener('click', function() {
                this.classList.toggle('selected');
    
                const imgElement = this.querySelector('img');
                let content = '';
                if (imgElement) {
                    content = '<hr>' + imgElement.alt + '<hr>';
                } else {
                    content = '<hr><br><hr>';
                }
    
                // Check if the item was just selected or deselected
                if (this.classList.contains('selected')) {
                    // Create a new message container and append it to the main container
                    const newMessageContainer = document.createElement('div');
                    newMessageContainer.className = 'message-container';
                    newMessageContainer.innerHTML = content;
                    mainContainer.appendChild(newMessageContainer);
                } else {
                    // Remove the last added message container
                    const messageContainers = document.querySelectorAll('.message-container');
                    if (messageContainers.length > 1) { // Ensure there's at least one message container remaining
                        mainContainer.removeChild(messageContainers[messageContainers.length - 1]);
                    }
                }
            });
        });
    
        let intervalId = setInterval(updateTimeAndName, 1000);
    
        function updateTimeAndName() {
            var now = new Date();
            now.setMinutes(now.getMinutes() - now.getTimezoneOffset());
            var dateTimeString = now.toISOString().slice(0,16); 
            var fullString = dateTimeString + " - "; 
            document.getElementById('dateTimeInput').value = fullString;
        }
    
        updateTimeAndName();
    
        document.getElementById('dateTimeInput').addEventListener('focus', function() {
            clearInterval(intervalId);
        });
    });
    
</script>
